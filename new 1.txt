1. Why JAVA language is developed?

2. When should we use C language & when should we use lava language?

3. What are the important features of lava? 4. What Is OAK7

5. What is the abbreviation of Java?

6. What is a platform, Platform Dependency and Platform Independency? 
7. What is the meaning of 
	a. source code, compiled code, executable code
	b. compilation, execution
	c. compiler & interpreter

8. Why C, C++ programming languages are platform dependency?

9. How Java achieved Platform independency?

10. Why JVM platform dependent?

11. What is the Java's Slogan? 12. Explain why Java is called language, platform, & technology?

--------------------------------
Java Software Interview Questions
--------------------------------

1. How many types of Java Softwares do we have? 

2. What is the difference between JDK, JRE, JVM & JIT?

3. What is Java Plug-in?

4. What is Java SE & what is the difference between Java SE & JDK? 

5. What is the meaning of Major & Minor versions of Java?

6. What is the difference between Latest version & Stable version? 

7. Will JVM installed automatically with OS?

8. Do we have single Java software for all types of OS?

9. What are the important folders & files of Java software?

10. Why Java is called open source software?

---------------------------------------------
Environment Variables Interview Questions 
---------------------------------------------

1. What is an environment variable?

2. What is the difference between binary files & library files? 

3. What is the difference between path, classpath & JAVA_HOME?

4. Why "path" is used by OS & Why "classpath" is used by compiler & JVM?

5. Who will use JAVA_HOME?

6. Why we do not set path & classpath for Game software? 

7. What are the different ways to set path & classpath variables?

8. Is it possible to set multiple softwares in path variables?

9. What is the role of ";" in path & classpath? 

10. What is the difference between set & export commands?

11. What is the difference between %path% & $path? 

12. What is the difference between ";" & ":" in path?

13. Why should we place ".;" in classpath variable? 

14. How will you solve if you find the "Error: could not find or load main class"

------------------------------------------------
Java programming elements Interaw Questions
------------------------------------------------

1. What are the 10 programming elements of Java language?

2. List out all types of programming elements with their sub types?

3. What is the creation syntax of 10 programming elements?

4. What is a package & sub package, what is the use of it? 

5. What is an interface, what is the use of it?

6. What is an abstract class, what is the use of it?

7. What is a class, what is the use of it?

8. What is a final class, what is the use of it? 

9. What is an enum, what is the use of it?

10. What is an annotation, what is the use of it? 

11. What is a variable, what is the use of it?

12. What is a method, what is the use of it? 

13. What is a constructor, what is the use of it?

14. What is a block, what is the use of it?

15. What is an inner class, what is the use of it? 

16. Explain all above programming elements with real-world examples?

17. What is the difference between class & abstract class & interface? 

18. What are the different mathematical values, we can store in a variable?

19. What is the difference between initialization logic & business logic? 

20. Can we write business logic in constructor?

21. What is the use of import statement?

22. What is the difference between import & static import?

23. What are the essential statements of Java program? 

24. What is the procedure to develop, compile & execute java program?

-----------------------------------------------------
Java source File Level Interview Questions 
-----------------------------------------------------

1. Can we create empty Java file, can we compile and execute It?

2. Can we create empty class, can we compile and execute It?

3. Is main method mandatory for compilation or for execution? 

4. Is it mandatory that java file name and class name must be same?

5. When Java file name & class name should be same?

6. Why Java file name & public class name should be same? 

7. What is the initial point of java class execution ?

8. In a single Java file how many classes can we define?

9. If a java file has multiple classes what is the java file name?

10. In a single java file, how many public classes can we define? 

11. If a java file has multiple classes, how many .class files are generated by compiler?

12. Can we compile multiple classes at a time?

13. Can we execute multiple classes at a time?"

14. What is a user defined method?

15. Will JVM executes user defined method automatically?

16. What is the rule in calling user defined method?

17. What are the two keywords we have in Java to provide memory to class members?

18. What is the difference between static & new keywords?

19. Why JVM does not execute user defined methods, why it executes only main method?

20. How many user defined methods can we create in a class?

21. What is the order of execution of user defined methods?
	Choose one option:
	a. In the order they are declared
	b. In the order they are called

22. If a class does not have main method how can we execute that class thods?
  
23. It a java file has multiple classes, can we define main method in all classes?

24. Can we call main method explicitly, what is the syntax to call main method explicitly?

25. What will happen if we call main method in its own body? 

26. Can we overload main method? 

27. If we overload main method which main method is executed?

28. If we create every class in a separate java file, how can we call one class method from another class; in this case should we compile each class separately?

29. What is the meaning of auto compilation? 

30. What is the difference
	a. System.out.print() 
	b. System.out.println()
	c. System.out.printf()

31. What is the Java source file structure?

32. Can we place package statement anywhere in the java file? 

33. Can we place import statement anywhere in the java file?

34. How many package statements can we place in the java file? 

35. How many import statements can we place in the java file?


--------------------------------------------------------------
Coding standards and Naming conventions Interview Questions
--------------------------------------------------------------

1. What is coding standards and Naming conventions? 

2. If we do not follow above CS and NS will it leads to CE or RE?

3. What is the naming convention we must follow in creating
	1. Class name
	2. Variable name
	3. Method name
	4. Package name
	5. Final variable

4. By following Naming convention can you identify the type of programming element just by seeing its name?

--------------------------------------
Java Tokens Interview Questions
--------------------------------------

1. What is a token? 

2. List out all 7 types of Java tokens?

-------------------------------------
Java Comments Interview Questions
-------------------------------------

1. What is a comment?

2. What is the need of comment? 3. How many types of comments are there?

4. Can we comment program statements like variables or methods using a comment?

5. How can we provide documentation for programming elements? 

6. Will compiler read statements those are placed in comment?

7. If we comment a variable, will it be available in .class file? 

8. Can we call a variable or method which is placed in comment?

9. Can we comment a comment?

10. Can we comment multiline comment using multiline comment? 

11. If we create a java file only with comments, will class file generated?

12. Identify invalid comments from below list?
	a. /////////////////////
	b. /*
	C. //**/
	d. /*/**/*/ 
	e. ////
	f. /*/**/*/

------------------------------------
Identifiers Interview Questions
------------------------------------

1. What is an identifier?

2. Can we create a class or method without name? 

3. When will we get CE: <identifier> expected?

4. What are the Rules in defining Identifier?

5. Can we start identifier with number? 

6. Can we start identifier with $or_?

7. Can we use number in identifier, If yes in which position?

8. Can we use spaces in identifier?

9. Can we create two variables with the same name balance, Balance? 

10. Can we create class name as Bank Account?

11. Can we use keyword as an identifier?

12. Can we use predefined class name as identifier? 

13. If we create a class with name String, how can we differentiate predefined class String? 

14. In which programming elements name $ and are generally used?

15. Why underscore is called connector symbol? 

16. Is there any limitation in identifier length?

17. Identify invalid identifier from the below list?
	a. hihellohru		b. program1
	c. 1stStudent		d. No#1Student
	e. MIN BALANCE		f. String
	g. Public			h. $$_$$_$$
	i. main				j. Bank Account

-------------------------------
Literal Interview Questions
-------------------------------

1. What is a literal?

2. How many types of literals Java supports? 

3. What is the default type of integer literal?

4. How can we store ir!teger literal as long type value?

5. What is the default type of floating-point literal? 

6. How can we store floating-point literal as float type value?

7. Do we have byte & short type literals?

8. How can we represent int literals as byte & short type literals?

9. What is a cast operator, what is right place to use it in an expression?

10. Identify the data types of the literals: 45, 45L, 45F, 450, 45.0, (byte)45, (short)45? 11

11. What is the default type "binary & octal & hexadecimal" literal? 

12. How can you identify integer literal is decimal or binary or octal or hexadecimal type?

13. What is the new literal added in Java 7 version?

14. What are the rules in creeting binary, octai, hexadecimal literals

15. How can we convert binary, octal, hexadecimal literal to decimal value?

16. How cart we identify a char literal? 

17. Can we store more than one character in single quote?

18. Can we use empty single quote?

19. How can we represent int type literal as char type?

20. How can we convert char to any number type literal? 

21. Can we represent int type literal as Boolean?

22. How can we identify a String literal?

23. Can we store more than one character in double quote?

24. Can we use empty double quote? 

25. If we place an alphabet say p directly in a class, will it be consider as char literal?

26. If we place a word say hi directly in a class, will it be consider as String literal?

27. Can you explain when will you get below compile time errors?
	1. CE: not a statement
	2. CE: unexpected type
	3. CE: cannot find symbol
	4. CE: unclosed character literal
	5. CE: empty character literal
	6. CE: integer number too large


-----------------------------------------------
Reading runtime values interview questions
-----------------------------------------------

1. What is are the different ways we can read input values from keyboard?

2. Explain advantage & disadvantage of each approach?

3. What is the default type applied to values sending from keyboard? 

4. How can you convert a number from string type to primitive type?

5. How can you create CUI & GUI for reading runtime values? 

6. What is the advantage of Scanner class over BufferedReader class?

7. What is special feature given in Console class?

8. How can you read password from CUI & GUI?

--------------------------------------------
Command line arguments interview questions
--------------------------------------------

1. What is the meaning of command line arguments? 

2. What is the object JVM uses to pass command line arguments to a Java program? 

3. Why main method has String[] parameter?

4. How can we read command line arguments in a java program?

5. In the below command, how many arguments are passing to Java application >java Hi Hello Hru?

6. Assume we are reading 3 values in java program using args[0], args[1], args[3] then what will happen in the below two cases
	a. only two values are passing from command line
	b. Three values are passed


---------------------------------
Modifiers interview Questions
---------------------------------

1. What is a modifier? 

2. List out all 13 modifiers?

3. is the "interface" a modifier keyword?

4. What is right place to use modifier in a programming element's declaration?

5. What is the difference between accessibility modifiers & other modifiers?

6. Can we apply more than one accessibility modifier?

7. Can we apply more than one execution level modifier?

8. Explain the functionality of all 13 modifiers? 

9. What are the modifiers allowed for variable, method, constructor,

block, & class? 10. Why only final modifier allowed to parameter & local variable?

11. Can you tell when will we get below compile time errors? 
	a. CE: modifier not allowed here
	b. CE: illegal combination of modifiers 
	c. CE: repeated modifier

-------------------------------------------
Accessibility Modifiers Interview Questions
-------------------------------------------

1. What is an Accessibility modifler?

2. What is the difference between Accessibility modifiers & accessibility specifies?

3. How many accessibility modifiers Java supports? 

4. What are the different levels of accessibility permission levels?

5. What the accessibility modifier keywords? 

6. Why accessibility modifiers are not allowed for local variables inside a method?

7. Why private & protected are not allowed to outer class?

8. Can we declare inner class as private or protected or static?

9. What is the default accessibility modifier of class and its members? 

10. What is the default accessibility modifier of interface and its members? 

11. How can create a class member to be accessed only in subclass from other package?

----------------------------------------------------
Null & NullPointerException interview questions 
----------------------------------------------------

1. What is the default value of every referenced type variable?

2. null & NULL are both same? 3. What is type of null?

4. What is the type of "null"?

5. What are the possible values we can assign to a referenced variable? 

6. How many types of referenced variables do we have based on the value assigned? 

7. What is the difference between object referenced variable & null referenced variable?

8. What will happen if we call non-static variable or non-static method using null referenced variable?

9. In project when will we get NullPointerException, how should we solve this exception?

10. lf we create HDRenced variable at class level hat is the defau value stored in it?

----------------------------------------------
Empty referenced variable Interview questions
----------------------------------------------

1. What is an empty referenced variable?

2. Where can we create empty referenced variable?

3. Can we create empty referenced variable at class level? 

4. Can we use empty referenced to call variable or method?

5. Is it leads CE or RE, if CE, what is the CE, why?

6. What is the difference between
	1. empty referenced variable,
	2. null referenced variable &
	3. object referenced variable


---------------------------------------
Printing Object Interview questions
---------------------------------------

1. What is printed when object is printed? 

2. How printin() method can retrieve the given object's classname@hashcode?

3. In which class toString() method is defined?

4. How can we print an object's data, when an object is printed?

5. When we print String class object, why its content is displayed?

6. When we print our class object, why its classname@hashcode is displayed? 

7. What is printed when we print object referenced variable?

8. What is printed when we print null referenced variable? 

9. What is printed when we print empty referenced variable?



----------------------------------------------------------------
LC-RP architecture based project development interview questions
----------------------------------------------------------------

1. How many types of objects will exist in real-world business? 

2. What are the three types of classes we must develop for an object as per business? 

3. When should we create super class & subclass in project? 

4. What is the meaning of specification, service provider, and service user?

5. Explain LC-RP architecture in designing, developing & using object operations?

6. What is Coupling and cohesion? 

7. What is the meaning of tight coupling & loose coupling?

8. What is the meaning of high cohesion & low cohesion?

9. Why we should develop low coupling & high cohesion in project?

10. When exactly superclass, subclass should be defined?

11. Design and develop Mobile-SIM objects using LCRP architecture? 
 
12. Design and develop ATMMachine-ATM Card objects using LCRP architecture?

13. Understand Gmail project architecture using MVC and LCRP?

14. What is the right design to enhance the project to add more operations to an existed business object (or) to modify an existing operation of an object? 

15. For example what is the right design to add 3G operation to SIM object?

------------------------------------
Jar File Interview Questions
------------------------------------

1. What is a jar file?

2. What are the different types of compressed files? Text

3. What is the difference between Jar, war, ear files?

4. What is the difference between jar, zip file? 

5. What is the use of jar command, where is it available?

6. What are the different options of jar command?

7. What are the options to create jar file? 

8. What are the options to extract jar file?

9. What are the options to list jar files?

10. What is the importance of character' in jar creation? 

11. How can we access classes from a jar file?

12. How can we set jar file in classpath for accessing classes in all packages of project?

13. What is classpath of a war file; means where should we copy jar file in project war?

---------------------------------------------------
Executable Jar File Interview Questions
---------------------------------------------------

1. What is an executable jar file?

2. What is difference between executable 

3. How can we create executable jar file? jar file and normal jar file? 

4. What is the need of manifest.mf file in jar file?

5. What are the different property names available in manifest.mf file? 

6. What is the property name to configure class name in manifest.mf file?

7. What is the java command option to execute executable jar file

8. How can we execute jar file using a batch file?

9. How can we execute jar file by double clicking the jar file?

-----------------------------
API interview questions
-----------------------------

1. What is the meaning of API and API Documentation?

2. When a class is called API? 

3. What are the differences between API & API documentation?

4. Why API documentation file format is html file?

5. What is the of Javadoc chommand?

6. How API is distributed with software?

7. How API Documentation is distributed?

8. For whom sake API and API documentation is generated?

9. What flies should be updated in Classpath environment variable?

10. How can we generate API documentation for our user defined classes?

11. What is the command and syntax to generate API documentation for our classes?

12. Should we compile source file to generate API Documentation file?

13. Can we generate API documentation for non-public class? 

14. What members of the class are included In API documentation of this class?

15. Why private & default members of the class are not included in API documentation?

16. Can explain API Documentation file structure?

17. How many html files are generated by javadoc tool for the given class?



